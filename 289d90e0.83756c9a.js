(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{70:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return s})),t.d(a,"metadata",(function(){return l})),t.d(a,"rightToc",(function(){return b})),t.d(a,"default",(function(){return i}));var r=t(3),n=t(7),c=(t(0),t(88)),s={id:"year",title:"Year"},l={unversionedId:"api/year",id:"api/year",isDocsHomePage:!1,title:"Year",description:"addYears",source:"@site/docs/api/year.md",slug:"/api/year",permalink:"/rescript-date/docs/api/year",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/api/year.md",version:"current",sidebar:"sidebar",previous:{title:"Month",permalink:"/rescript-date/docs/api/month"},next:{title:"ISO Week",permalink:"/rescript-date/docs/api/iso-week"}},b=[{value:"addYears",id:"addyears",children:[]},{value:"subYears",id:"subyears",children:[]},{value:"getYear",id:"getyear",children:[]},{value:"setYear",id:"setyear",children:[]},{value:"startOfYear",id:"startofyear",children:[]},{value:"endOfYear",id:"endofyear",children:[]},{value:"isSameYear",id:"issameyear",children:[]},{value:"isLeapYear",id:"isleapyear",children:[]},{value:"lastMonthOfYear",id:"lastmonthofyear",children:[]},{value:"lastDayOfYear",id:"lastdayofyear",children:[]},{value:"getDaysInYear",id:"getdaysinyear",children:[]},{value:"differenceInCalendarYears",id:"differenceincalendaryears",children:[]},{value:"differenceInYears",id:"differenceinyears",children:[]}],d={rightToc:b};function i(e){var a=e.components,t=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},d,t,{components:a,mdxType:"MDXLayout"}),Object(c.b)("h3",{id:"addyears"},"addYears"),Object(c.b)("p",null,"Add the specified number of years to the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let addYears: (float, Js.Date.t) => Js.Date.t\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMD(~year=2018., ~month=4., ~date=1., ())\n\ndate |> ReDate.addYears(1.)\n")),Object(c.b)("h3",{id:"subyears"},"subYears"),Object(c.b)("p",null,"Subtract the specified number of years from the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let subYears: (float, Js.Date.t) => Js.Date.t\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMD(~year=2019., ~month=4., ~date=1., ())\n\ndate |> ReDate.subYears(1.)\n")),Object(c.b)("h3",{id:"getyear"},"getYear"),Object(c.b)("p",null,"Get the year of the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let getYear: Js.Date.t => float\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMD(~year=2019., ~month=4., ~date=1., ())\n\ndate |> ReDate.getYear\n")),Object(c.b)("h3",{id:"setyear"},"setYear"),Object(c.b)("p",null,"Set the year to the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let setYear: (float, Js.Date.t) => Js.Date.t\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMD(~year=2019., ~month=4., ~date=1., ())\n\ndate |> ReDate.setYear(2021.)\n")),Object(c.b)("h3",{id:"startofyear"},"startOfYear"),Object(c.b)("p",null,"Return the start of a year for the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let startOfYear: Js.Date.t => Js.Date.t\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMD(~year=2018., ~month=5., ~date=1., ())\n\ndate |> ReDate.startOfYear\n")),Object(c.b)("h3",{id:"endofyear"},"endOfYear"),Object(c.b)("p",null,"Return the end of a year for the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let endOfYear: Js.Date.t => Js.Date.t\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMD(~year=2018., ~month=8., ~date=10., ())\n\ndate |> ReDate.endOfYear\n")),Object(c.b)("h3",{id:"issameyear"},"isSameYear"),Object(c.b)("p",null,"Are the given dates in the same year?"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let isSameYear: (Js.Date.t, Js.Date.t) => bool\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let fstDate = Js.Date.makeWithYMD(~year=2018., ~month=8., ~date=10., ())\nlet sndDate = Js.Date.makeWithYMD(~year=2018., ~month=6., ~date=20., ())\n\nfstDate |> ReDate.isSameYear(sndDate)\n")),Object(c.b)("h3",{id:"isleapyear"},"isLeapYear"),Object(c.b)("p",null,"Is the given date in the leap year?"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let isLeapYear: Js.Date.t => bool\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMD(~year=2020., ~month=8., ~date=10., ())\n\ndate |> ReDate.isLeapYear\n")),Object(c.b)("h3",{id:"lastmonthofyear"},"lastMonthOfYear"),Object(c.b)("p",null,"Return the last month of a year for the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let lastMonthOfYear: Js.Date.t => Js.Date.t\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMD(~year=2018., ~month=8., ~date=10., ())\n\ndate |> ReDate.lastMonthOfYear\n")),Object(c.b)("h3",{id:"lastdayofyear"},"lastDayOfYear"),Object(c.b)("p",null,"Return the last day of a year for the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let lastDayOfYear: Js.Date.t => Js.Date.t\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMD(~year=2018., ~month=8., ~date=10., ())\n\ndate |> ReDate.lastDayOfYear\n")),Object(c.b)("h3",{id:"getdaysinyear"},"getDaysInYear"),Object(c.b)("p",null,"Get the number of days in a year of the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let getDaysInYear: Js.Date.t => float\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMD(~year=2018., ~month=10., ~date=10., ())\n\ndate |> ReDate.getDaysInYear\n")),Object(c.b)("h3",{id:"differenceincalendaryears"},"differenceInCalendarYears"),Object(c.b)("p",null,"Get the number of calendar years between the given dates."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let differenceInCalendarYears: (Js.Date.t, Js.Date.t) => float\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let fstDate = Js.Date.makeWithYMD(~year=2020., ~month=5., ~date=1., ())\nlet sndDate = Js.Date.makeWithYMD(~year=2018., ~month=1., ~date=1., ())\n\nfstDate |> ReDate.differenceInCalendarYears(sndDate)\n")),Object(c.b)("h3",{id:"differenceinyears"},"differenceInYears"),Object(c.b)("p",null,"Get the number of full years between the given dates."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let differenceInYears: (Js.Date.t, Js.Date.t) => float\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"let fstDate = Js.Date.makeWithYMD(~year=2018., ~month=0., ~date=1., ())\nlet sndDate = Js.Date.makeWithYMD(~year=2016., ~month=0., ~date=1., ())\n\nfstDate |> ReDate.differenceInYears(sndDate)\n")))}i.isMDXComponent=!0},88:function(e,a,t){"use strict";t.d(a,"a",(function(){return o})),t.d(a,"b",(function(){return O}));var r=t(0),n=t.n(r);function c(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){c(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function b(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var d=n.a.createContext({}),i=function(e){var a=n.a.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},o=function(e){var a=i(e.components);return n.a.createElement(d.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.a.createElement(n.a.Fragment,{},a)}},u=n.a.forwardRef((function(e,a){var t=e.components,r=e.mdxType,c=e.originalType,s=e.parentName,d=b(e,["components","mdxType","originalType","parentName"]),o=i(t),u=r,O=o["".concat(s,".").concat(u)]||o[u]||p[u]||c;return t?n.a.createElement(O,l(l({ref:a},d),{},{components:t})):n.a.createElement(O,l({ref:a},d))}));function O(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var c=t.length,s=new Array(c);s[0]=u;var l={};for(var b in a)hasOwnProperty.call(a,b)&&(l[b]=a[b]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var d=2;d<c;d++)s[d]=t[d];return n.a.createElement.apply(null,s)}return n.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);