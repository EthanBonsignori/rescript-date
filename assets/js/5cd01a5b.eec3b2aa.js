"use strict";(self.webpackChunkrescript_date_docs=self.webpackChunkrescript_date_docs||[]).push([[449],{3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return m}});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},i=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,c=e.parentName,i=d(e,["components","mdxType","originalType","parentName"]),p=l(n),m=s,f=p["".concat(c,".").concat(m)]||p[m]||u[m]||r;return n?a.createElement(f,o(o({ref:t},i),{},{components:n})):a.createElement(f,o({ref:t},i))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=p;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d.mdxType="string"==typeof e?e:s,o[1]=d;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1852:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return i},default:function(){return p}});var a=n(7462),s=n(3366),r=(n(7294),n(3905)),o=["components"],d={id:"second",title:"Second"},c=void 0,l={unversionedId:"api/second",id:"api/second",isDocsHomePage:!1,title:"Second",description:"addSeconds",source:"@site/docs/api/second.md",sourceDirName:"api",slug:"/api/second",permalink:"/rescript-date/docs/api/second",editUrl:"https://github.com/mobily/rescript-date/edit/master/docs/docs/api/second.md",tags:[],version:"current",lastUpdatedAt:1636805091,formattedLastUpdatedAt:"11/13/2021",frontMatter:{id:"second",title:"Second"},sidebar:"sidebar",previous:{title:"Interval",permalink:"/rescript-date/docs/api/interval"},next:{title:"Minute",permalink:"/rescript-date/docs/api/minute"}},i=[{value:"addSeconds",id:"addseconds",children:[],level:3},{value:"subSeconds",id:"subseconds",children:[],level:3},{value:"getSeconds",id:"getseconds",children:[],level:3},{value:"setSeconds",id:"setseconds",children:[],level:3},{value:"differenceInSeconds",id:"differenceinseconds",children:[],level:3},{value:"startOfSecond",id:"startofsecond",children:[],level:3},{value:"endOfSecond",id:"endofsecond",children:[],level:3},{value:"isSameSecond",id:"issamesecond",children:[],level:3}],u={toc:i};function p(e){var t=e.components,n=(0,s.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"addseconds"},"addSeconds"),(0,r.kt)("p",null,"Add the specified number of seconds to the given date."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let addSeconds: (Js.Date.t, float) => Js.Date.t\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=0., ());\n\ndate->ReDate.addSeconds(1.);\n")),(0,r.kt)("h3",{id:"subseconds"},"subSeconds"),(0,r.kt)("p",null,"Subtract the specified number of seconds from the given date."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let subSeconds: (Js.Date.t, float) => Js.Date.t\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=0., ());\n\ndate->ReDate.subSeconds(1.);\n")),(0,r.kt)("h3",{id:"getseconds"},"getSeconds"),(0,r.kt)("p",null,"Get the seconds of the given date."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let getSeconds: Js.Date.t => float\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=30., ());\n\ndate->ReDate.getSeconds\n")),(0,r.kt)("h3",{id:"setseconds"},"setSeconds"),(0,r.kt)("p",null,"Set the seconds to the given date."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let setSeconds: (Js.Date.t, float) => Js.Date.t\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=0., ());\n\ndate->ReDate.setSeconds(30.)\n")),(0,r.kt)("h3",{id:"differenceinseconds"},"differenceInSeconds"),(0,r.kt)("p",null,"Get the number of seconds between the given dates."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let differenceInSeconds: (Js.Date.t, Js.Date.t) => float\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let fstDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=40., ~seconds=15., ());\nlet sndDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=0., ());\n\nfstDate->ReDate.differenceInSeconds(sndDate);\n")),(0,r.kt)("h3",{id:"startofsecond"},"startOfSecond"),(0,r.kt)("p",null,"Return the start of a second for the given date."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let startOfSecond: Js.Date.t => Js.Date.t\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let date =\n  Js.Date.setMilliseconds(\n    Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=16., ~minutes=50., ~seconds=10., ()),\n    423.,\n  )\n ->fromFloat;\n\ndate->ReDate.startOfSecond;\n")),(0,r.kt)("h3",{id:"endofsecond"},"endOfSecond"),(0,r.kt)("p",null,"Return the end of a second for the given date."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let endOfSecond: Js.Date.t => Js.Date.t\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let date =\n  Js.Date.setMilliseconds(\n    Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=16., ~minutes=50., ~seconds=10., ()),\n    423.,\n  )\n ->fromFloat;\n\ndate->ReDate.endOfSecond;\n")),(0,r.kt)("h3",{id:"issamesecond"},"isSameSecond"),(0,r.kt)("p",null,"Are the given dates in the same second?"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let isSameSecond: (Js.Date.t, Js.Date.t) => bool\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let fstDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=23., ~minutes=59., ~seconds=59., ());\nlet sndDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=23., ~minutes=59., ~seconds=58., ());\n\nfstDate->ReDate.isSameSecond(sndDate)\n")))}p.isMDXComponent=!0}}]);