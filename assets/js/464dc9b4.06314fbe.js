"use strict";(self.webpackChunkrescript_date_docs=self.webpackChunkrescript_date_docs||[]).push([[847],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),p=i(r),m=a,h=p["".concat(l,".").concat(m)]||p[m]||c[m]||s;return r?n.createElement(h,o(o({ref:t},d),{},{components:r})):n.createElement(h,o({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=p;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var i=2;i<s;i++)o[i]=r[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1977:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return i},toc:function(){return d},default:function(){return p}});var n=r(7462),a=r(3366),s=(r(7294),r(3905)),o=["components"],u={id:"hour",title:"Hour"},l=void 0,i={unversionedId:"api/hour",id:"api/hour",isDocsHomePage:!1,title:"Hour",description:"addHours",source:"@site/docs/api/hour.md",sourceDirName:"api",slug:"/api/hour",permalink:"/rescript-date/docs/api/hour",editUrl:"https://github.com/mobily/rescript-date/edit/master/docs/docs/api/hour.md",tags:[],version:"current",lastUpdatedAt:1636805091,formattedLastUpdatedAt:"11/13/2021",frontMatter:{id:"hour",title:"Hour"},sidebar:"sidebar",previous:{title:"Minute",permalink:"/rescript-date/docs/api/minute"},next:{title:"Day",permalink:"/rescript-date/docs/api/day"}},d=[{value:"addHours",id:"addhours",children:[],level:3},{value:"subHours",id:"subhours",children:[],level:3},{value:"getHours",id:"gethours",children:[],level:3},{value:"setHours",id:"sethours",children:[],level:3},{value:"differenceInHours",id:"differenceinhours",children:[],level:3},{value:"startOfHour",id:"startofhour",children:[],level:3},{value:"endOfHour",id:"endofhour",children:[],level:3},{value:"isSameHour",id:"issamehour",children:[],level:3}],c={toc:d};function p(e){var t=e.components,r=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"addhours"},"addHours"),(0,s.kt)("p",null,"Add the specified number of hours to the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let addHours: (Js.Date.t, float) => Js.Date.t\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=0., ());\n\ndate->ReDate.addHours(1.);\n")),(0,s.kt)("h3",{id:"subhours"},"subHours"),(0,s.kt)("p",null,"Subtract the specified number of hours from the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let subHours: (Js.Date.t, float) => Js.Date.t\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=0., ());\n\ndate->ReDate.subHours(1.);\n")),(0,s.kt)("h3",{id:"gethours"},"getHours"),(0,s.kt)("p",null,"Get the hours of the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let getHours: Js.Date.t => float\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=30., ());\n\ndate->ReDate.getHours\n")),(0,s.kt)("h3",{id:"sethours"},"setHours"),(0,s.kt)("p",null,"Set the hours to the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let setHours: (Js.Date.t, float) => Js.Date.t\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=0., ());\n\ndate->ReDate.setHours(18.)\n")),(0,s.kt)("h3",{id:"differenceinhours"},"differenceInHours"),(0,s.kt)("p",null,"Get the number of hours between the given dates."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let differenceInHours: (Js.Date.t, Js.Date.t) => float\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let fstDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=40., ~seconds=15., ());\nlet sndDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=10., ~minutes=30., ~seconds=0., ());\n\nfstDate->ReDate.differenceInHours(sndDate);\n")),(0,s.kt)("h3",{id:"startofhour"},"startOfHour"),(0,s.kt)("p",null,"Return the start of an hour for the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let startOfHour: Js.Date.t => Js.Date.t\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=16., ~minutes=50., ~seconds=10., ());\n\ndate->ReDate.startOfHour;\n")),(0,s.kt)("h3",{id:"endofhour"},"endOfHour"),(0,s.kt)("p",null,"Return the end of an hour for the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let endOfHour: Js.Date.t => Js.Date.t\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=16., ~minutes=50., ~seconds=10., ());\n\ndate->ReDate.endOfHour;\n")),(0,s.kt)("h3",{id:"issamehour"},"isSameHour"),(0,s.kt)("p",null,"Are the given dates in the same hour?"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let isSameHour: (Js.Date.t, Js.Date.t) => bool\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let fstDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=16., ~minutes=50., ~seconds=10., ());\nlet sndDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=16., ~minutes=0., ~seconds=0., ());\n\nfstDate->ReDate.isSameHour(sndDate);\n")))}p.isMDXComponent=!0}}]);