"use strict";(self.webpackChunkrescript_date_docs=self.webpackChunkrescript_date_docs||[]).push([[889],{3905:function(e,t,a){a.d(t,{Zo:function(){return i},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var k=n.createContext({}),o=function(e){var t=n.useContext(k),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},i=function(e){var t=o(e.components);return n.createElement(k.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,k=e.parentName,i=d(e,["components","mdxType","originalType","parentName"]),c=o(a),m=r,p=c["".concat(k,".").concat(m)]||c[m]||u[m]||s;return a?n.createElement(p,l(l({ref:t},i),{},{components:a})):n.createElement(p,l({ref:t},i))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,l=new Array(s);l[0]=c;var d={};for(var k in t)hasOwnProperty.call(t,k)&&(d[k]=t[k]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var o=2;o<s;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},2251:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return d},contentTitle:function(){return k},metadata:function(){return o},toc:function(){return i},default:function(){return c}});var n=a(7462),r=a(3366),s=(a(7294),a(3905)),l=["components"],d={id:"week",title:"Week"},k=void 0,o={unversionedId:"week",id:"week",title:"Week",description:"addWeeks",source:"@site/api/week.md",sourceDirName:".",slug:"/week",permalink:"/rescript-date/api/week",tags:[],version:"current",frontMatter:{id:"week",title:"Week"},sidebar:"sidebar",previous:{title:"Day",permalink:"/rescript-date/api/day"},next:{title:"Week Numbering",permalink:"/rescript-date/api/week-numbering"}},i=[{value:"addWeeks",id:"addweeks",children:[],level:3},{value:"subWeeks",id:"subweeks",children:[],level:3},{value:"differenceInWeeks",id:"differenceinweeks",children:[],level:3},{value:"differenceInCalendarWeeks",id:"differenceincalendarweeks",children:[],level:3},{value:"startOfWeek",id:"startofweek",children:[],level:3},{value:"endOfWeek",id:"endofweek",children:[],level:3},{value:"isSameWeek",id:"issameweek",children:[],level:3},{value:"lastDayOfWeek",id:"lastdayofweek",children:[],level:3},{value:"getWeekOfMonth",id:"getweekofmonth",children:[],level:3},{value:"getWeeksInMonth",id:"getweeksinmonth",children:[],level:3},{value:"getWeek",id:"getweek",children:[],level:3}],u={toc:i};function c(e){var t=e.components,a=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"type day =\n  | Sunday\n  | Monday\n  | Tuesday\n  | Wednesday\n  | Thursday\n  | Friday\n  | Saturday\n")),(0,s.kt)("h3",{id:"addweeks"},"addWeeks"),(0,s.kt)("p",null,"Add the specified number of week to the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let addWeeks: (Js.Date.t, float) => Js.Date.t\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMD(~year=2018., ~month=0., ~date=1., ())\n\ndate->ReDate.addWeeks(1.)\n")),(0,s.kt)("h3",{id:"subweeks"},"subWeeks"),(0,s.kt)("p",null,"Subtract the specified number of weeks from the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let subWeeks: (Js.Date.t, float) => Js.Date.t\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMD(~year=2018., ~month=0., ~date=8., ())\n\ndate->ReDate.subWeeks(1.)\n")),(0,s.kt)("h3",{id:"differenceinweeks"},"differenceInWeeks"),(0,s.kt)("p",null,"Get the number of full weeks between the given dates."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let differenceInWeeks: (Js.Date.t, Js.Date.t) => float\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let fstDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=7., ~hours=23., ~minutes=59., ~seconds=59., ())\nlet sndDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=0., ~minutes=0., ~seconds=0., ())\n\nfstDate->ReDate.differenceInWeeks(sndDate)\n")),(0,s.kt)("h3",{id:"differenceincalendarweeks"},"differenceInCalendarWeeks"),(0,s.kt)("p",null,"Get the number of calendar weeks between the given dates."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let differenceInCalendarWeeks: (~weekStartsOn: day=?, Js.Date.t, Js.Date.t) => float\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let fstDate = Js.Date.makeWithYMD(~year=2018., ~month=8., ~date=20., ())\nlet sndDate = Js.Date.makeWithYMD(~year=2018., ~month=7., ~date=7., ())\n\nfstDate->ReDate.differenceInCalendarWeeks(sndDate)\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let fstDate = Js.Date.makeWithYMD(~year=2018., ~month=6., ~date=15., ())\nlet sndDate = Js.Date.makeWithYMD(~year=2018., ~month=5., ~date=20., ())\nlet differenceInCalendarWeeks = ReDate.differenceInCalendarWeeks(~weekStartsOn=Monday)\n\nfstDate->differenceInCalendarWeeks(sndDate)\n")),(0,s.kt)("h3",{id:"startofweek"},"startOfWeek"),(0,s.kt)("p",null,"Return the start of a week for the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let startOfWeek: (~weekStartsOn: day=?, Js.Date.t) => Js.Date.t\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=12., ~hours=16., ~minutes=50., ~seconds=12., ())\n\ndate->ReDate.startOfWeek\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=12., ~hours=16., ~minutes=50., ~seconds=12., ())\nlet startOfWeek = ReDate.startOfWeek(~weekStartsOn=Monday)\n\ndate->startOfWeek\n")),(0,s.kt)("h3",{id:"endofweek"},"endOfWeek"),(0,s.kt)("p",null,"Return the end of a week for the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let endOfWeek: (~weekStartsOn: day=?, Js.Date.t) => Js.Date.t\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=12., ~hours=16., ~minutes=50., ~seconds=12., ())\n\ndate->ReDate.endOfWeek\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=12., ~hours=16., ~minutes=50., ~seconds=12., ())\nlet endOfWeek = ReDate.endOfWeek(~weekStartsOn=Monday)\n\ndate->endOfWeek\n")),(0,s.kt)("h3",{id:"issameweek"},"isSameWeek"),(0,s.kt)("p",null,"Are the given dates in the same week?"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let isSameWeek: (~weekStartsOn: day=?, Js.Date.t, Js.Date.t) => bool\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let fstDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=16., ~minutes=50., ~seconds=12., ())\nlet sndDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=5., ~hours=10., ~minutes=15., ~seconds=55., ())\n\nfstDate->ReDate.isSameWeek(sndDate)\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let fstDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=6., ~hours=23., ~minutes=59., ~seconds=59., ())\nlet sndDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=7., ~hours=0., ~minutes=0., ~seconds=0., ())\nlet isSameWeek = ReDate.isSameWeek(~weekStartsOn=Monday)\n\nfstDate->isSameWeek(sndDate)\n")),(0,s.kt)("h3",{id:"lastdayofweek"},"lastDayOfWeek"),(0,s.kt)("p",null,"Return the last day of a week for the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let lastDayOfWeek: (~weekStartsOn: day=?, Js.Date.t) => Js.Date.t\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=12., ~hours=16., ~minutes=50., ~seconds=12., ())\n\ndate->ReDate.lastDayOfWeek\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=12., ~hours=16., ~minutes=50., ~seconds=12., ())\nlet lastDayOfWeek = ReDate.lastDayOfWeek(~weekStartsOn=Monday)\n\ndate->lastDayOfWeek\n")),(0,s.kt)("h3",{id:"getweekofmonth"},"getWeekOfMonth"),(0,s.kt)("p",null,"Get the week of the month of the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let getWeekOfMonth: (~weekStartsOn: day=?, Js.Date.t) => float\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMD(~year=2018., ~month=0., ~date=1., ())\n\ndate->ReDate.getWeekOfMonth\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMD(~year=2018., ~month=10., ~date=23., ())\nlet getWeekOfMonth = ReDate.getWeekOfMonth(~weekStartsOn=Saturday)\n\ndate->getWeekOfMonth\n")),(0,s.kt)("h3",{id:"getweeksinmonth"},"getWeeksInMonth"),(0,s.kt)("p",null,"Get the number of calendar weeks the month in the given date spans."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let getWeeksInMonth: (~weekStartsOn: day=?, Js.Date.t) => float\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMD(~year=2018., ~month=10., ~date=1., ())\n\ndate->ReDate.getWeeksInMonth\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMD(~year=2018., ~month=10., ~date=14., ())\nlet getWeeksInMonth = ReDate.getWeeksInMonth(~weekStartsOn=Friday)\n\ndate->getWeeksInMonth\n")),(0,s.kt)("h3",{id:"getweek"},"getWeek"),(0,s.kt)("p",null,"Get the local week index of the given date."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let getWeek: (~weekStartsOn: day=?, Js.Date.t) => float\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMD(~year=2018., ~month=10., ~date=1., ())\n\ndate->ReDate.getWeek\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let date = Js.Date.makeWithYMD(~year=2018., ~month=10., ~date=14., ())\nlet getWeek = ReDate.getWeek(~weekStartsOn=Monday)\n\ndate->getWeek\n")))}c.isMDXComponent=!0}}]);