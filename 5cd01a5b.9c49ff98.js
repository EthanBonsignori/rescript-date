(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return d})),n.d(t,"default",(function(){return i}));var a=n(3),s=n(7),c=(n(0),n(89)),r={id:"second",title:"Second"},o={unversionedId:"api/second",id:"api/second",isDocsHomePage:!1,title:"Second",description:"addSeconds",source:"@site/docs/api/second.md",slug:"/api/second",permalink:"/rescript-date/docs/api/second",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/api/second.md",version:"current",sidebar:"sidebar",previous:{title:"Interval",permalink:"/rescript-date/docs/api/interval"},next:{title:"Minute",permalink:"/rescript-date/docs/api/minute"}},d=[{value:"addSeconds",id:"addseconds",children:[]},{value:"subSeconds",id:"subseconds",children:[]},{value:"getSeconds",id:"getseconds",children:[]},{value:"setSeconds",id:"setseconds",children:[]},{value:"differenceInSeconds",id:"differenceinseconds",children:[]},{value:"startOfSecond",id:"startofsecond",children:[]},{value:"endOfSecond",id:"endofsecond",children:[]},{value:"isSameSecond",id:"issamesecond",children:[]}],l={rightToc:d};function i(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h3",{id:"addseconds"},"addSeconds"),Object(c.b)("p",null,"Add the specified number of seconds to the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let addSeconds: (Js.Date.t, float) => Js.Date.t\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=0., ());\n\ndate->ReDate.addSeconds(1.);\n")),Object(c.b)("h3",{id:"subseconds"},"subSeconds"),Object(c.b)("p",null,"Subtract the specified number of seconds from the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let subSeconds: (Js.Date.t, float) => Js.Date.t\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=0., ());\n\ndate->ReDate.subSeconds(1.);\n")),Object(c.b)("h3",{id:"getseconds"},"getSeconds"),Object(c.b)("p",null,"Get the seconds of the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let getSeconds: Js.Date.t => float\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=30., ());\n\ndate->ReDate.getSeconds\n")),Object(c.b)("h3",{id:"setseconds"},"setSeconds"),Object(c.b)("p",null,"Set the seconds to the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let setSeconds: (Js.Date.t, float) => Js.Date.t\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let date = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=0., ());\n\ndate->ReDate.setSeconds(30.)\n")),Object(c.b)("h3",{id:"differenceinseconds"},"differenceInSeconds"),Object(c.b)("p",null,"Get the number of seconds between the given dates."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let differenceInSeconds: (Js.Date.t, Js.Date.t) => float\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let fstDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=40., ~seconds=15., ());\nlet sndDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=19., ~minutes=30., ~seconds=0., ());\n\nfstDate->ReDate.differenceInSeconds(sndDate);\n")),Object(c.b)("h3",{id:"startofsecond"},"startOfSecond"),Object(c.b)("p",null,"Return the start of a second for the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let startOfSecond: Js.Date.t => Js.Date.t\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let date =\n  Js.Date.setMilliseconds(\n    Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=16., ~minutes=50., ~seconds=10., ()),\n    423.,\n  )\n ->fromFloat;\n\ndate->ReDate.startOfSecond;\n")),Object(c.b)("h3",{id:"endofsecond"},"endOfSecond"),Object(c.b)("p",null,"Return the end of a second for the given date."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let endOfSecond: Js.Date.t => Js.Date.t\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let date =\n  Js.Date.setMilliseconds(\n    Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=16., ~minutes=50., ~seconds=10., ()),\n    423.,\n  )\n ->fromFloat;\n\ndate->ReDate.endOfSecond;\n")),Object(c.b)("h3",{id:"issamesecond"},"isSameSecond"),Object(c.b)("p",null,"Are the given dates in the same second?"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let isSameSecond: (Js.Date.t, Js.Date.t) => bool\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let fstDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=23., ~minutes=59., ~seconds=59., ());\nlet sndDate = Js.Date.makeWithYMDHMS(~year=2018., ~month=0., ~date=1., ~hours=23., ~minutes=59., ~seconds=58., ());\n\nfstDate->ReDate.isSameSecond(sndDate)\n")))}i.isMDXComponent=!0},89:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),s=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=s.a.createContext({}),i=function(e){var t=s.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=i(e.components);return s.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},p=s.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,r=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),b=i(n),p=a,m=b["".concat(r,".").concat(p)]||b[p]||u[p]||c;return n?s.a.createElement(m,o(o({ref:t},l),{},{components:n})):s.a.createElement(m,o({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,r=new Array(c);r[0]=p;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var l=2;l<c;l++)r[l]=n[l];return s.a.createElement.apply(null,r)}return s.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);